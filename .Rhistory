geom_line(aes(years, predicted, color = region),size = 1)+
theme_minimal_hgrid(font_size = 10)+
scale_x_continuous(breaks = seq(2008,2018, by = 2))+
scale_color_manual(values = c("orange","steelblue"))+
scale_fill_manual(values = c("orange","steelblue"))+
labs(color = "",x = "Year", y ="Distance (km)")+
theme(legend.position = c(0.7,0.1))
max_dist
new = data.frame(years = c(seq(2008,2018, by=0.1),seq(2010,2018, by=0.1)),
region = c(rep("South of Minas & Central",101),
rep("Triângulo Mineiro",81)))
pred = predict(gam1,new, se.fit=T)
max_dist =
new %>%
mutate(predicted = pred$fit,
se = pred$se.fit,
CL = predicted-1.96*se,
CU = predicted+1.96*se) %>%
ggplot()+
geom_point(data = data_gam,aes(years, d, color = region) )+
geom_ribbon(aes(years,ymin = CL, ymax = CU, fill = region), alpha = 0.3)+
geom_line(aes(years, predicted, color = region),size = 1)+
theme_minimal_hgrid(font_size = 10)+
scale_x_continuous(breaks = seq(2008,2018, by = 2))+
scale_color_manual(values = c("orange","steelblue"))+
scale_fill_manual(values = c("orange","steelblue"))+
labs(color = "", fill = "",x = "Year", y ="Distance (km)")+
theme(legend.position = c(0.7,0.1))
max_dist
new = data.frame(years = c(seq(2008,2018, by=0.1),seq(2010,2018, by=0.1)),
region = c(rep("South of Minas & Central",101),
rep("Triângulo Mineiro",81)))
pred = predict(gam1,new, se.fit=T)
max_dist =
new %>%
mutate(predicted = pred$fit,
se = pred$se.fit,
CL = predicted-1.96*se,
CU = predicted+1.96*se) %>%
ggplot()+
geom_point(data = data_gam,aes(years, d, color = region) )+
geom_ribbon(aes(years,ymin = CL, ymax = CU, group = region), fill = "gray70", alpha = 0.3)+
geom_line(aes(years, predicted, color = region),size = 1)+
theme_minimal_hgrid(font_size = 10)+
scale_x_continuous(breaks = seq(2008,2018, by = 2))+
scale_color_manual(values = c("orange","steelblue"))+
labs(color = "",x = "Year", y ="Distance (km)")+
theme(legend.position = c(0.7,0.1))
max_dist
plot_grid(
map_prg,
plot_grid(
prev_mand_orn,
max_dist,NULL, scale = 0.9,
nrow = 3,rel_heights = c(1,1,0.15),labels = c("B","C")
),
rel_widths = c(1,0.5),labels = c("A","")
)
ggsave("figs/map_combo.png",dpi= 600, height = 7, width = 10)
new = data.frame(years = c(seq(2008,2018, by=0.1),seq(2010,2018, by=0.1)),
region = c(rep("South of Minas & Central",101),
rep("Triângulo Mineiro",81)))
pred = predict(gam1,new, se.fit=T)
max_dist =
new %>%
mutate(predicted = pred$fit,
se = pred$se.fit,
CL = predicted-1.96*se,
CU = predicted+1.96*se) %>%
ggplot()+
geom_point(data = data_gam,aes(years, d, color = region) )+
geom_ribbon(aes(years,ymin = CL, ymax = CU, group = region), fill = "gray70", alpha = 0.3)+
geom_line(aes(years, predicted, color = region),size = 1)+
theme_minimal_hgrid(font_size = 10)+
scale_x_continuous(breaks = seq(2008,2018, by = 2))+
scale_color_manual(values = c("orange","steelblue"))+
labs(color = "",x = "Year", y ="Distance (km)")+
theme(legend.position = c(0.1,0.8))
max_dist
plot_grid(
map_prg,
plot_grid(
prev_mand_orn,
max_dist,NULL, scale = 0.9,
nrow = 3,rel_heights = c(1,1,0.15),labels = c("B","C")
),
rel_widths = c(1,0.5),labels = c("A","")
)
ggsave("figs/map_combo.png",dpi= 600, height = 7, width = 10)
new = data.frame(years = c(seq(2008,2018, by=0.1),seq(2010,2018, by=0.1)),
region = c(rep("South of Minas & Central",101),
rep("Triângulo Mineiro",81)))
pred = predict(gam1,new, se.fit=T)
max_dist =
new %>%
mutate(predicted = pred$fit,
se = pred$se.fit,
CL = predicted-1.96*se,
CU = predicted+1.96*se) %>%
ggplot()+
geom_point(data = data_gam,aes(years, d, color = region) )+
geom_ribbon(aes(years,ymin = CL, ymax = CU, group = region), fill = "gray70", alpha = 0.3)+
geom_line(aes(years, predicted, color = region),size = 2)+
theme_minimal_hgrid(font_size = 10)+
scale_x_continuous(breaks = seq(2008,2018, by = 2))+
scale_color_manual(values = c("orange","steelblue"))+
labs(color = "",x = "Year", y ="Distance (km)")+
theme(legend.position = c(0.05,0.8))
max_dist
new = data.frame(years = c(seq(2008,2018, by=0.1),seq(2010,2018, by=0.1)),
region = c(rep("South of Minas & Central",101),
rep("Triângulo Mineiro",81)))
pred = predict(gam1,new, se.fit=T)
max_dist =
new %>%
mutate(predicted = pred$fit,
se = pred$se.fit,
CL = predicted-1.96*se,
CU = predicted+1.96*se) %>%
ggplot()+
geom_point(data = data_gam,aes(years, d, color = region),size = 2 )+
geom_ribbon(aes(years,ymin = CL, ymax = CU, group = region), fill = "gray70", alpha = 0.3)+
geom_line(aes(years, predicted, color = region),size = 2)+
theme_minimal_hgrid(font_size = 10)+
scale_x_continuous(breaks = seq(2008,2018, by = 2))+
scale_color_manual(values = c("orange","steelblue"))+
labs(color = "",x = "Year", y ="Distance (km)")+
theme(legend.position = c(0.05,0.8))
max_dist
plot_grid(
map_prg,
plot_grid(
prev_mand_orn,
max_dist,NULL, scale = 0.9,
nrow = 3,rel_heights = c(1,1,0.15),labels = c("B","C")
),
rel_widths = c(1,0.5),labels = c("A","")
)
ggsave("figs/map_combo.png",dpi= 600, height = 7, width = 10)
hh_hlb %>%
group_by(codigo, produtor, propriedade) %>%
mutate(cum_erradic = cumsum(count)) %>%
filter(year == "2018", Semester == 2) %>%
# group_by(region, municipio, class, produtor, lat, lon, especie, presenca, propriedade) %>%
# summarise(N_farms = n()) %>%
ungroup() %>%
# filter(presenca != "Absent") %>%
group_by(region, especie) %>%
summarise(n = n(),
area =  mean(area),
prev = sum((presenca == "Present")*1),
perc = round((prev/n)*100,2),
n_plants = sum(total_plantas),
eradic =sum(cum_erradic),
perc_eradic = round((eradic/n_plants)*100,2)) %>%
arrange(desc(region))
IDs = unique(MG_df_mun$id)
location2 = numeric(length(hh_hlb$lat))
for(i in 1:length(IDs)){
qqq = MG_df_mun %>%
filter(id == IDs[i])
city = as.character(unique(qqq$NM_MUNICIP))
for(j in 1:length(hh_hlb$lat)) {
pip = point.in.polygon(point.x = hh_hlb$lon[j],
point.y = hh_hlb$lat[j],
pol.x = qqq$long,
pol.y = qqq$lat)
if(pip > 0){location2[j] = city}
}
}
hh_hlb_new = hh_hlb %>%
mutate(map_location = location2) %>%
mutate(NM_MUNICIP = map_location) %>%
group_by(codigo, produtor, propriedade) %>%
mutate(cum_erradic = cumsum(count)) %>%
ungroup() %>%
filter(year>=2018, Semester == 2) %>%
dplyr::select(presenca, NM_MUNICIP, region) %>%
group_by(NM_MUNICIP) %>%
summarise(presenca=max(presenca)) %>%
# group_by(NM_MUNICIP) %>%
# mutate(region = max(region)) %>%
mutate(presenca = case_when(presenca== "Present" ~ "HLB present",
presenca== "Absent" ~ "Not present"))
median(c("Central", "South of Minas", "Triângulo Mineiro"))
hlb_new_shape = left_join(MG_df_mun, hh_hlb_new , by = "NM_MUNICIP") %>%
filter(!is.na(presenca))# %>%
#dplyr::select( -lon, -FONTE, -Datum_Atua, -Datum_Orig)
hlb_for_map = hh_hlb %>%
mutate(map_location = location2) %>%
mutate(NM_MUNICIP = map_location) %>%
group_by(codigo) %>%
mutate(cum_erradic = cumsum(count)) %>%
ungroup() %>%
filter(year>=2018, Semester == 2) %>%
dplyr::select(presenca, NM_MUNICIP,lat, lon)
new_scale <- function(new_aes) {
structure(ggplot2::standardise_aes_names(new_aes), class = "new_aes")
}
library(ggnewscale)
mun = ggplot()+
geom_sf( data = BRA, fill = "white", color = "gray80")+
geom_sf(data = MG, fill = "gray95", color = NA) +
geom_polygon(dat = region_map_data,
aes(long, lat, group = group, fill = NM_MESO),
color = NA,alpha=.4)+
scale_fill_manual("Region",values =c("#d1495b","#2e4057","#00798c"))+
new_scale("fill") +
geom_polygon(dat = hlb_new_shape,
aes(long, lat, group = group, fill = presenca),
color = "gray90", size = 0.3)+
geom_point(data = hlb_for_map,
aes(lon, lat, color = "Monitored orchards"),
size = 0.4)+
scale_fill_manual("HLB Status",values =c("orange","darkgreen"))+
scale_color_manual(values = "black")+
ylim(-23, -16)+
xlim(-52, -41)+
labs(x = "Longitude", y = "Latitude", color = "", fill = "")+
guides(color = guide_legend(override.aes = list(size=2.5)))+
north( location = "bottomright", scale = 0.08, symbol = 10,
x.min=-49, x.max=-41, y.min=-22, y.max=-14.5)+
ggsn::scalebar(location = "bottomright", dist = 100,
dist_unit = "km", transform = TRUE,x.min=-50,
x.max=-41, y.min=-23, y.max=-16,st.bottom = FALSE,
st.dist = 0.02, st.size = 3)+
annotate("text", x= -49,y=-22, label="SP", size=5)+
annotate("text", x= -44,y=-17, label="MG", size=5)+
theme_minimal_grid(font_size = 12)+
theme(legend.position = "right")
mun
ggsave("figs/map_presence.png", dpi = 600, height =7, width = 11 )
regi = ggplot()+
# geom_sf( data = BRA, fill = "white", color = "gray90")+
geom_sf(data = MG, fill = "gray60", color = NA) +
geom_polygon(dat = region_map_data, aes(long, lat, group = group, fill = NM_MESO), alpha=1) +
scale_fill_manual(values =c("#E69F00","#00BFC4","#003300"))+
ylim(-24, -13)+
xlim(-51.1, -40)+
labs(x = "Longitude", y = "Latitude", color = "", fill = "")+
guides(fill = guide_legend(override.aes = list(size=0.3)))+
theme_bw()+
# theme_void()+
theme(legend.position = "right",
legend.title = element_text(size = 6),
legend.text  = element_text(size = 6),
legend.key.size = unit(.7, "lines"),
text = element_blank(),
# # panel.background = element_blank(),
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.ticks = element_blank()
)
regi
ggdraw(mun) +
draw_plot(regi,0.1, 0.66, 0.36, 0.36)
# ggsave("figs/map_presence.png", dpi = 600, height =7, width = 7.7 )
library(tidyverse)
library(cowplot)
library(gsheet)
library(ggthemes)
library(viridis)
library(rnaturalearth)
library(rnaturalearthhires)
library(sp)
library(ggsn)
library(gstat)
library(rgdal)
library(raster)
library(sf)
library(effects)
library(spatstat)
library(spatialEco)
library(agricolae)
library(DescTools)
library(lme4)
library(ggridges)
library(factoextra)
library(FactoMineR)
library(ggmosaic)
theme_set(theme_light())
hlbMG <- gsheet2tbl("https://docs.google.com/spreadsheets/d/1OBz-YtkZdCAWvVYZnntUSndxYRS0WRwV_H97syNZQRs/edit?usp=sharing")
hlbMG
hlbMG <- hlbMG %>%
mutate(Incidencia = case_when(Incidencia >= 0 ~ Incidencia,
Incidencia == NA_character_ ~ 0 )) %>%
mutate(presenca = case_when(
Incidencia == 0 ~ "Absent",
Incidencia > 0 ~ "Present"
))
hlb <- hlbMG %>%
gather(year, count, -c(1:11, 34:36)) %>%
separate(year, c("year", "Semester")) %>% #separate the column year in two columns
mutate(count = replace(count, is.na(count), 0),
count = as.numeric(count) # replace Na by 0
) %>%
mutate(prevalencia = case_when(count == 0 ~ 0,
count > 0 ~ 1)) %>%  # make the prevalence binomial
mutate(lat = as.numeric(lat),
lon = as.numeric(lon)) %>%
filter(!is.na(lon)) %>%
filter(lat < -18.33 | lon > -48 ) %>%
mutate(area = as.numeric(area)) %>%
mutate(especie = case_when(especie == "Laranja" ~ "Sweet orange",
especie == "Limão" ~ "Lemon",
especie == "Tangerina" ~ "Mandarins",
especie == "Lima ácida" ~ "Acid lime")) %>%
mutate(regiao_geografica =  case_when(regiao_geografica == "CENTRAL" ~ "Central" ,
regiao_geografica == "TRIÂNGULO MINEIRO" ~"Triângulo Mineiro",
regiao_geografica == "SUL DE MINAS" ~ "South of Minas"))
aa = hlb %>%
group_by(municipio, regiao_geografica) %>%
summarize(n = length(unique(propriedade))) %>%
filter(!is.na(regiao_geografica)) %>%
mutate(region = regiao_geografica) %>%
dplyr::select(municipio, region)
hh = data.frame()
muni = unique(hlb$municipio)
for(i in 1:length(muni)){
aa2  = aa %>%
filter(municipio == muni[i])
if(nrow(aa2) == 0){aa2 = data.frame(municipio = NA, region = NA)}
hh2 = hlb %>%
filter(municipio == muni[i]) %>%
mutate(region = aa2$region)
hh = hh %>%
bind_rows(hh2)
}
rm(aa, aa2, hh2, muni)
hh_hlb = hh  %>%
filter(!is.na(area)) %>%
mutate(class = case_when(area <= 10 ~ "Mini",
area > 10 & area <= 50  ~ "Small",
area > 50 & area <= 200  ~ "Medium",
area > 200  ~ "Large")) %>%
mutate(class = factor(class, levels = c("Mini", "Small", "Medium", "Large")))
BRA <- ne_states(
country = "Brazil",
returnclass = "sf"
)
# subset spatial objects of only the states of interest
MG <- BRA[BRA$name_en == "Minas Gerais", ]
shape_MG = readOGR("shape_files/MG_Mesorregiao","MG_Mesorregiao_IBGE_2015_jul" )
#
shape_MG@data$id = rownames(shape_MG@data)
MG_points = fortify(shape_MG)
MG_df =plyr::join(MG_points, shape_MG@data, by="id")
rm(MG_points)
# plot(shape_MG)
shape_MG_mun = readOGR("shape_files/MG_municipios","MG_municipios_2014" )
shape_MG_mun@data$id = rownames(shape_MG_mun@data)
MG_points_mun = fortify(shape_MG_mun)
MG_df_mun =plyr::join(MG_points_mun, shape_MG_mun@data, by="id")
rm(MG_points_mun)
region_map_data = MG_df %>%
filter(NM_MESO %in% c("CENTRAL MINEIRA",
"TRIÃ‚NGULO MINEIRO/ALTO PARANAÃ\u008dBA",
"SUL/SUDOESTE DE MINAS",
"CAMPO DAS VERTENTES",
"METROPOLITANA DE BELO HORIZONTE",
"OESTE DE MINAS") ) %>%
mutate(NM_MESO = case_when(NM_MESO == "TRIÃ‚NGULO MINEIRO/ALTO PARANAÃ\u008dBA" ~"Triângulo Mineiro",
NM_MESO %in% c("CENTRAL MINEIRA",
"METROPOLITANA DE BELO HORIZONTE") ~ "Central",
NM_MESO %in% c("CAMPO DAS VERTENTES",
"SUL/SUDOESTE DE MINAS",
"OESTE DE MINAS" ) ~ "South of Minas"))
rec_data = hh_hlb%>%
group_by(codigo, produtor, propriedade, lat, lon,total_plantas) %>%
# filter(Semester ==2) %>%
mutate(cum_erradic = cumsum(count)) %>%
filter(year == "2018", Semester == 2) %>%
ungroup() #%>%
# dplyr::select(lat,lon)
IDs = unique(region_map_data$id)
location3 = numeric(length(hh_hlb$lat))
for(i in 1:length(IDs)){
qqq = region_map_data %>%
filter(id == IDs[i])
region = as.character(unique(qqq$NM_MESO))
for(j in 1:length(hh_hlb$lat)) {
pip = point.in.polygon(point.x = hh_hlb$lon[j],
point.y = hh_hlb$lat[j],
pol.x = qqq$long,
pol.y = qqq$lat)
if(pip > 0){location3[j] = region}
}
}
# hh_hlb=hh_hlb %>%
#   left_join(rec_data %>%
#               mutate(region2 = location3),
#              by = c("codigo", "produtor", "propriedade", "lat", "lon","total_plantas")
#   )
hh_hlb$region = location3
write.table(location3,"data/new_regions.txt")
# length(location3)
read.table("data/new_regions.txt")
locations_load = read.table("data/new_regions.txt")
# I have this file save just for speed up the process, because I've already had run previous chunk
write.table(location3,"data/new_regions.txt")
locations_load = read.table("data/new_regions.txt")
location3 = locations_load$x
hh_hlb$region = location3
length(hlbMG$codigo)
length(rec_data$codigo)
IDs = unique(MG_df_mun$id)
location2 = numeric(length(hh_hlb$lat))
for(i in 1:length(IDs)){
qqq = MG_df_mun %>%
filter(id == IDs[i])
city = as.character(unique(qqq$NM_MUNICIP))
for(j in 1:length(hh_hlb$lat)) {
pip = point.in.polygon(point.x = hh_hlb$lon[j],
point.y = hh_hlb$lat[j],
pol.x = qqq$long,
pol.y = qqq$lat)
if(pip > 0){location2[j] = city}
}
}
hh_hlb_new = hh_hlb %>%
mutate(map_location = location2) %>%
mutate(NM_MUNICIP = map_location) %>%
group_by(codigo, produtor, propriedade) %>%
mutate(cum_erradic = cumsum(count)) %>%
ungroup() %>%
filter(year>=2018, Semester == 2) %>%
dplyr::select(presenca, NM_MUNICIP, region) %>%
group_by(NM_MUNICIP) %>%
summarise(presenca=max(presenca)) %>%
# group_by(NM_MUNICIP) %>%
# mutate(region = max(region)) %>%
mutate(presenca = case_when(presenca== "Present" ~ "HLB present",
presenca== "Absent" ~ "Not present"))
median(c("Central", "South of Minas", "Triângulo Mineiro"))
hlb_new_shape = left_join(MG_df_mun, hh_hlb_new , by = "NM_MUNICIP") %>%
filter(!is.na(presenca))# %>%
#dplyr::select( -lon, -FONTE, -Datum_Atua, -Datum_Orig)
hlb_for_map = hh_hlb %>%
mutate(map_location = location2) %>%
mutate(NM_MUNICIP = map_location) %>%
group_by(codigo) %>%
mutate(cum_erradic = cumsum(count)) %>%
ungroup() %>%
filter(year>=2018, Semester == 2) %>%
dplyr::select(presenca, NM_MUNICIP,lat, lon)
new_scale <- function(new_aes) {
structure(ggplot2::standardise_aes_names(new_aes), class = "new_aes")
}
library(ggnewscale)
mun = ggplot()+
geom_sf( data = BRA, fill = "white", color = "gray80")+
geom_sf(data = MG, fill = "gray95", color = NA) +
geom_polygon(dat = region_map_data,
aes(long, lat, group = group, fill = NM_MESO),
color = NA,alpha=.4)+
scale_fill_manual("Region",values =c("#d1495b","#2e4057","#00798c"))+
new_scale("fill") +
geom_polygon(dat = hlb_new_shape,
aes(long, lat, group = group, fill = presenca),
color = "gray90", size = 0.3)+
geom_point(data = hlb_for_map,
aes(lon, lat, color = "Monitored orchards"),
size = 0.4)+
scale_fill_manual("HLB Status",values =c("orange","darkgreen"))+
scale_color_manual(values = "black")+
ylim(-23, -16)+
xlim(-52, -41)+
labs(x = "Longitude", y = "Latitude", color = "", fill = "")+
guides(color = guide_legend(override.aes = list(size=2.5)))+
north( location = "bottomright", scale = 0.08, symbol = 10,
x.min=-49, x.max=-41, y.min=-22, y.max=-14.5)+
ggsn::scalebar(location = "bottomright", dist = 100,
dist_unit = "km", transform = TRUE,x.min=-50,
x.max=-41, y.min=-23, y.max=-16,st.bottom = FALSE,
st.dist = 0.02, st.size = 3)+
annotate("text", x= -49,y=-22, label="SP", size=5)+
annotate("text", x= -44,y=-17, label="MG", size=5)+
theme_minimal_grid(font_size = 12)+
theme(legend.position = "right")
mun
ggsave("figs/map_presence.png", dpi = 600, height =7, width = 11 )
regi = ggplot()+
# geom_sf( data = BRA, fill = "white", color = "gray90")+
geom_sf(data = MG, fill = "gray60", color = NA) +
geom_polygon(dat = region_map_data, aes(long, lat, group = group, fill = NM_MESO), alpha=1) +
scale_fill_manual(values =c("#E69F00","#00BFC4","#003300"))+
ylim(-24, -13)+
xlim(-51.1, -40)+
labs(x = "Longitude", y = "Latitude", color = "", fill = "")+
guides(fill = guide_legend(override.aes = list(size=0.3)))+
theme_bw()+
# theme_void()+
theme(legend.position = "right",
legend.title = element_text(size = 6),
legend.text  = element_text(size = 6),
legend.key.size = unit(.7, "lines"),
text = element_blank(),
# # panel.background = element_blank(),
panel.grid.major = element_line(colour = NA),
panel.grid.minor = element_line(colour = NA),
axis.ticks = element_blank()
)
regi
ggdraw(mun) +
draw_plot(regi,0.1, 0.66, 0.36, 0.36)
# ggsave("figs/map_presence.png", dpi = 600, height =7, width = 7.7 )
write.table(hh_hlb_new, "data/hh_hlb_new.txt")
hh_hlb_new
hh_hlb_new = read.table(data/hh_hlb_new.txt)
read.table("data/hh_hlb_new.txt")
write.table(hlb_for_map, "data/hlb_for_map.txt")
hlb_for_map = read.table("data/hlb_for_map.txt")
